//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "ap_user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub ap_user_id: i32,
    pub nadeo_display_name: String,
    #[sea_orm(unique)]
    pub nadeo_account_id: String,
    #[sea_orm(unique)]
    pub nadeo_login: String,
    pub nadeo_club_tag: Option<String>,
    pub site_admin: bool,
    pub registered: Option<TimeDateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::map::Entity")]
    Map,
}

impl Related<super::map::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Map.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
